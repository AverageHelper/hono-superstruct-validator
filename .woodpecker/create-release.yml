# On push to main, if the latest version in CHANGELOG.md is different from the latest version tag, create a new tag, and create a new release.

when:
  - event: manual
    branch: main
  - event: push
    branch: main

clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      tags: true

steps:
  changelog:
    name: Parse Changelog
    image: node:18
    commands:
      - npm ci
      - npm run create-release-env # Saves details to local `.release.env` file

  tag:
    name: Create Tag
    image: alpine/git
    commands:
      # Prepare env vars, from file created in previous step
      - while read line; do export "$line"; done < .release.env
      - export GIT_CREDENTIALS="$CODEBERG_USERNAME:$CODEBERG_ACCESS_TOKEN"
      - export TAG="v$NEW_RELEASE_VERSION"

      # Tag if not exists
      - if git show-ref --tags $TAG --quiet; then echo tag "$TAG" exists; else git tag "$TAG" && git push https://$GIT_CREDENTIALS@codeberg.org/$CI_REPO.git HEAD:main "$TAG"; fi
    secrets: [codeberg_username, codeberg_access_token]

  release:
    name: Create Release
    image: backplane/jq
    commands:
      # Prepare env vars, from file created in previous step
      - while read line; do export "$line"; done < .release.env
      - export TAG="v$NEW_RELEASE_VERSION"
      - >
        export RELEASE_PAYLOAD=$(jq -cn \
          --arg b "$NEW_RELEASE_DESCRIPTION" \
          --arg d false \
          --arg n "$TAG" \
          --arg p "$NEW_RELEASE_PRERELEASE" \
          --arg t main \
          '{ body: $b, draft: $d, name: $n, prerelease: $p, target_commitish: $t }')

      # Prepare release values
      - export RELEASE_BODY=$(echo $RELEASE_PAYLOAD | jq -c '(.|tojson)')

      # See if release exists
      - export RELEASE_ID=$(curl "https://codeberg.org/api/v1/repos/$CI_REPO/releases/tags/$TAG" | jq .id)

      # Do release if not exists
      - 'if [ "$RELEASE_ID" == "null" ]; then echo "Creating release $TAG" && curl "https://codeberg.org/api/v1/repos/$CI_REPO/releases" -H "accept: application/json" -H "Authorization: token $CODEBERG_ACCESS_TOKEN" -H "Content-Type: application/json" -d "$RELEASE_BODY" -i; else echo "Release $TAG already exists with ID $RELEASE_ID"; fi'
    secrets: [codeberg_access_token]
